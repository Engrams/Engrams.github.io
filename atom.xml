<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-22T13:10:05.921Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>冬 炀</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端学习-Day6~7</title>
    <link href="http://yoursite.com/2019/08/21/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day6-7/"/>
    <id>http://yoursite.com/2019/08/21/前端学习-Day6-7/</id>
    <published>2019-08-21T07:16:17.000Z</published>
    <updated>2019-08-22T13:10:05.921Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：8小时</li><li>学习目标：零基础学院-第六、七天</li><li>目标是否达成：已达成</li></ul><hr><h3 id="定位（position）"><a href="#定位（position）" class="headerlink" title="定位（position）"></a>定位（position）</h3><ul><li><p><strong>静态定位</strong>（元素在文档流的正常位置）</p><p>position：static（默认值）</p></li><li><p><strong>相对定位</strong>（占据正常文档流中的位置，移动与其他元素重叠）</p><p>position：relative</p></li><li><p><strong>绝对定位</strong>（元素脱离正常文档流）</p><p>position：absolute</p></li><li><p><strong>固定定位</strong>（脱离文档流，定位相对浏览器视口）</p><p>position：fixed</p></li><li><p><strong>z-index</strong>（元素重叠时，决定元素出现顶部优先度的属性）</p><p>z-index：auto（为0，默认值），让元素是1的时候就会出现在0的顶部。元素是2时就会出现在1的顶部。</p></li></ul><p><strong>注意：</strong></p><p>​        1.top, bottom, left, 和 right 来精确指定要将非默认值定位元素移动到的位置。</p><p>​        2.绝对定位的元素设置top: 0; bottom: 0; left: 0; right: 0; 和 margin: 0;会使元素布满整个可视窗口</p><p>​        3.定位上下文：设定绝对定位元素的相对定位元素。在其中的父元素添加position: relative;，没有的话，绝对            定位元素则以浏览器视口来定位。</p><hr><h3 id="弹性盒子（flex）"><a href="#弹性盒子（flex）" class="headerlink" title="弹性盒子（flex）"></a>弹性盒子（flex）</h3><ul><li><h4 id="模型说明"><a href="#模型说明" class="headerlink" title="模型说明"></a>模型说明</h4><p><img src="/2019/08/21/前端学习-Day6-7/12.png" alt></p><ul><li><strong>主轴（main axis）</strong>是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的列）。该轴的开始和结束被称为 <strong>main start</strong> 和 <strong>main end</strong>。</li><li><strong>交叉轴（cross axis）</strong>是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 <strong>cross start</strong> 和 <strong>cross end</strong>。</li><li>设置了 display: flex的父元素被称之为 <strong>flex 容器（flex container）。</strong></li><li>在 flex 容器中表现为柔性的盒子的元素被称之为 <strong>flex 项</strong>（<strong>flex item</strong>）</li></ul></li><li><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul><li><strong>flex-direction</strong>（指定主轴的方向，元素排列的方向）<ul><li>row：默认值，主轴为水平方向，起点在左端</li><li>row-reverse：主轴为水平方向，起点在右端</li><li>column：主轴为垂直方向，起点在上沿</li><li>column-reverse：主轴为垂直方向，起点在下沿</li></ul></li><li><strong>flex-warp</strong>（一行元素过多时换行）<ul><li>nowrap：（默认）不换行</li><li>wrap：换行，第一行在上方</li><li>wrap-reverse：换行，第一行在下方</li></ul></li><li><strong>flex-flow</strong>：flex-direction属性和flex-wrap属性的简写形式，默认值为：row nowrap</li><li><strong>justify-content</strong>（元素在主轴的对齐方向）<ul><li>flex-start：左对齐（默认值）</li><li>flex-end：右对齐</li><li>center：居中</li><li>space-between：两端对齐，项目之间间隔相等</li><li>space-around：每个项目两侧的间隔相等</li></ul></li><li><strong>align-item</strong>（元素在交叉轴的对齐方向）<ul><li>lex-start：交叉轴起点对齐</li><li>flex-end：交叉轴终点对齐</li><li>center：交叉轴中点对齐</li><li>stretch（默认值）：如果项目没有设置高度或设为auto，将占满整个容器的高度</li><li>baseline：项目的第一行文字的基线对齐</li></ul></li><li><strong>align-content</strong>（多轴线对齐方式，如果项目只有一根轴线，该属性不起作用）<ul><li>flex-start：与交叉轴起点对齐</li><li>flex-end：与交叉轴终点对齐</li><li>center：与交叉轴中点对齐</li><li>stretch：轴线占满整个交叉轴</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li><li>space-around：没跟轴线两侧的间隔都相等</li></ul></li><li><strong>order</strong>（flex项的排序，数值越小越靠前）<ul><li>所有 flex 项默认的 order 值是 0。</li><li>相同 order 值的 flex 项按源顺序显示。所以假如你有四个元素，其 order 值分别是2，1，1和0，那么它们的显示顺序就分别是第四，第二，第三，和第一。</li></ul></li><li><strong>flex-grow</strong>（弹性盒子项（flex item）的拉伸因子）<ul><li>格式：flex-grow：numeber</li><li>占据空间=（number/一行盒子元素number总数）/100%</li></ul></li><li><strong>flex-shrink</strong>（指定了 flex 元素的收缩规则）<ul><li>格式：flex-shrink：numeber</li><li>flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，也就是元素和总宽度大于盒子宽度</li><li>每个缩小空间=移除空间*（number/一行盒子元素number总数）</li></ul></li><li><strong>flex-basis</strong>（分配多余空间之前，项目占据的主轴空间）<ul><li>flex 元素在主轴方向上的初始大小。</li><li>取值可以是宽度（px、%）和关键词</li></ul></li><li><strong>flex: 缩写与全写</strong><ul><li>是flex-grow，flex-shrink和flex-basis的缩写，默认值为0，1，auto。</li></ul></li><li><strong>align-self</strong>（允许单个项目有与其他项目不一样的交叉轴对齐方式）<ul><li>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</li></ul></li></ul></li></ul><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><h4 id="1-实现一个两栏布局，左侧占30-宽度，右侧占70-宽度"><a href="#1-实现一个两栏布局，左侧占30-宽度，右侧占70-宽度" class="headerlink" title="1.实现一个两栏布局，左侧占30%宽度，右侧占70%宽度"></a>1.实现一个两栏布局，左侧占30%宽度，右侧占70%宽度</h4><ul><li>body</li></ul><p><img src="/2019/08/21/前端学习-Day6-7/1.png" alt></p><ul><li><p>float</p><p><img src="/2019/08/21/前端学习-Day6-7/2.png" alt></p></li><li><p>position</p><p><img src="/2019/08/21/前端学习-Day6-7/3.png" alt></p></li><li><p>flex</p><p><img src="/2019/08/21/前端学习-Day6-7/4.png" alt></p></li></ul><h4 id="2-实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化"><a href="#2-实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化" class="headerlink" title="2.实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化"></a>2.实现一个两栏布局，左侧固定宽度，右侧根据浏览器宽度进行自适应变化</h4><p>解决思路：通过float、position和flex的属性实现盒子并排，再通过添加父盒子的padding-left制造一个空间。盒子一则通过margin或者position填充空间。</p><ul><li><p>float</p><p><img src="/2019/08/21/前端学习-Day6-7/6.png" alt></p></li><li><p>position</p><p><img src="/2019/08/21/前端学习-Day6-7/5.png" alt></p></li><li><p>flex</p><p><img src="/2019/08/21/前端学习-Day6-7/7.png" alt></p></li></ul><h4 id="3-实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自-适应变化"><a href="#3-实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自-适应变化" class="headerlink" title="3.实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自    适应变化"></a>3.实现一个三栏布局，左侧固定宽度，右侧固定宽度，中间部分宽度随浏览器宽度变化而自    适应变化</h4><p>解决思路：跟第二题差不多</p><ul><li><p>body</p><p><img src="/2019/08/21/前端学习-Day6-7/11.png" alt></p></li><li><p>float</p><p><img src="/2019/08/21/前端学习-Day6-7/8.png" alt></p></li><li><p>position</p><p><img src="/2019/08/21/前端学习-Day6-7/9.png" alt></p></li><li><p>flex</p><p><img src="/2019/08/21/前端学习-Day6-7/10.png" alt></p></li></ul><hr><p>以上为学习内容总结，如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：8小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第六、七天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;定位（position）&quot;&gt;&lt;a href=&quot;#定位（position）&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="定位" scheme="http://yoursite.com/tags/%E5%AE%9A%E4%BD%8D/"/>
    
      <category term="布局" scheme="http://yoursite.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>前端学习-Day5</title>
    <link href="http://yoursite.com/2019/08/14/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day5/"/>
    <id>http://yoursite.com/2019/08/14/前端学习-Day5/</id>
    <published>2019-08-14T08:44:11.000Z</published>
    <updated>2019-08-21T10:54:21.153Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：4小时</li><li>学习目标：零基础学院-第五天</li><li>目标是否达成：已达成</li></ul><hr><h2 id="浮动（float）"><a href="#浮动（float）" class="headerlink" title="浮动（float）"></a>浮动（float）</h2><h3 id="1-定义："><a href="#1-定义：" class="headerlink" title="1.定义："></a>1.定义：</h3><p>浮动元素会脱离正常的文档布局流，并吸附到其父容器的左或右。在正常布局中位于该浮动元素之下的内容，此时会围绕着浮动元素，填满其另一侧的空间。</p><h3 id="2-属性："><a href="#2-属性：" class="headerlink" title="2.属性："></a>2.属性：</h3><ul><li><strong>left ：</strong>使左边缘接触包含块的左边缘或另一浮动块的右边缘。</li><li><strong>right ：</strong> 使右边缘接触包含块的右边缘或另一浮动块的左边缘。</li><li><strong>none：</strong>元素不浮动。</li></ul><p><strong>注意：</strong></p><p><strong>1.浮动元素的框内要有内容，或者设定高宽才占空间。</strong></p><p><strong>2.浮动之下的内容，文字包括图片都会围绕浮动元素。</strong></p><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>指定一个元素是否必须移动(清除浮动后)到在它之前的浮动元素下面。clear属性适用于浮动和非浮动元素。</p><h3 id="2-属性：-1"><a href="#2-属性：-1" class="headerlink" title="2.属性："></a>2.属性：</h3><ul><li>none：元素不会向下移动清除之前的浮动。</li><li>right：元素被向下移动用于清除之前的右浮动。</li><li>left：元素被向下移动用于清除之前的左浮动。</li><li>both：元素被向下移动用于清除之前的左右浮动。</li></ul><p><strong>注意：</strong></p><p><strong>1.浮动元素使用该属性，则下一个浮动元素就是在使用该属性的同层漂浮。</strong></p><p><strong>2.非浮动元素使用该属性，则下一个浮动元素就是在使用该属性的下一层层漂浮。</strong></p><h2 id="块格式化上下文-Block-Formatting-Context-BFC"><a href="#块格式化上下文-Block-Formatting-Context-BFC" class="headerlink" title="块格式化上下文(Block Formatting Context,BFC)"></a>块格式化上下文(Block Formatting Context,BFC)</h2><h3 id="1-定义-1"><a href="#1-定义-1" class="headerlink" title="1.定义"></a>1.定义</h3><p>Web页面的可视化CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p><h3 id="2-常用促发用法"><a href="#2-常用促发用法" class="headerlink" title="2.常用促发用法"></a>2.常用促发用法</h3><ul><li>在浮动元素的末尾添加一个空元素，设置 clear：both属性。</li><li>使用after伪元素其实也是通过 content 在元素的后面生成了内容为一个点的块级元素。（由于IE6-7不支持:after，使用 zoom:1触发 hasLayout。）</li><li>设置父元素 overflow 或者display：table 属性来闭合浮动。</li></ul><h3 id="3-处理相关问题"><a href="#3-处理相关问题" class="headerlink" title="3.处理相关问题"></a>3.处理相关问题</h3><ul><li><h4 id="父盒子坍塌问题"><a href="#父盒子坍塌问题" class="headerlink" title="父盒子坍塌问题"></a><strong>父盒子坍塌问题</strong></h4><p>浮动脱离了文档流，浮动子元素超出父盒子。</p></li><li><h4 id="外边距坍塌"><a href="#外边距坍塌" class="headerlink" title="外边距坍塌"></a><strong>外边距坍塌</strong></h4><p>块级元素的margin-top和下外边距（margin-bottom）有时会合并为一个外边距，其大小取其中最大者。</p></li></ul><hr><p>以上为学习内容总结，如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：4小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第五天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;浮动（float）&quot;&gt;&lt;a href=&quot;#浮动（float）&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>前端学习-Day4</title>
    <link href="http://yoursite.com/2019/08/14/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day4/"/>
    <id>http://yoursite.com/2019/08/14/前端学习-Day4/</id>
    <published>2019-08-14T07:00:59.000Z</published>
    <updated>2019-08-16T07:59:10.856Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：4小时</li><li>学习目标：零基础学院-第四天</li><li>目标是否达成：已达成</li></ul><hr><h2 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>CSS框模型（也称盒模型）是网页布局的基础——每个元素代表一个矩形的方框，框的内容、内边距、边界和外边距像洋葱的膜一样，一层层构建起来。</p><h3 id="2-框常用属性"><a href="#2-框常用属性" class="headerlink" title="2.框常用属性"></a>2.框常用属性</h3><p>框每一层的大小都可以使用一些特定的CSS属性调整。相关属性如下：</p><ul><li><h4 id="width、height"><a href="#width、height" class="headerlink" title="width、height"></a><strong>width、height</strong></h4><ul><li><strong>定义：</strong>width和height设置内容框的<strong>宽度</strong>和<strong>高度</strong>。内容框是框内容显示的区域——包括框内的文本内容以及嵌套的子元素框。</li><li><strong>运用：</strong>通过设置width、height的大小来设置内容框的大小。使用px或百分比。</li></ul></li><li><h4 id="padding"><a href="#padding" class="headerlink" title="padding"></a><strong>padding</strong></h4><ul><li><strong>定义：</strong>padding是CSS框的<strong>内边距</strong>——这一层是位于<strong>内容框</strong>与<strong>边界（border）</strong>之间。</li><li><strong>运用：</strong>padding只有大小设置。padding-top、padding-bottom、padding-left、padding-right四个值可以单独使用也可以通过padding简写使用。</li></ul></li><li><h4 id="border"><a href="#border" class="headerlink" title="border"></a><strong>border</strong></h4><ul><li><strong>定义：</strong>border是CSS框的<strong>边界</strong>——这一层是位于<strong>外边距（margin）</strong>与<strong>内边距（padding）</strong>之间。</li><li><strong>运用：</strong><ul><li>border简写：可以一次性设置四个边的厚度、风格、颜色属性。例如border：1px solid red。</li><li>border-width，border-style，border-color：分别设置四个边的宽度、风格、颜色。</li><li>border-top-width，border-top-style，border-top-color：单独设置一个边的三个不同的属性。</li></ul></li></ul></li><li><h4 id="margin"><a href="#margin" class="headerlink" title="margin"></a><strong>margin</strong></h4><ul><li><p><strong>margin</strong>是CSS框周围的外部区域，称为<strong>外边距</strong>。</p></li><li><p><strong>运用：</strong>margin只有大小设置。margin-top、margin-bottom、margin-left、margin-right四个值可以单独使用也可以通过margin简写使用。</p></li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><ul><li><p><strong>1.盒子元素总空间=border+padding+width*height。</strong></p></li><li><p><strong>2.外边距合并问题：块级元素的margin-top和下外边距（margin-bottom）有时会合并为一个外边距，其大小取其中最大者。</strong></p></li><li><p><strong>3.%设置大小：会根据页面的大小而改变；px设置大小：不会根据页面大小而改变。</strong></p></li></ul><h3 id="3-框的其他属性"><a href="#3-框的其他属性" class="headerlink" title="3.框的其他属性"></a>3.框的其他属性</h3><ul><li><h4 id="溢流"><a href="#溢流" class="headerlink" title="溢流"></a><strong>溢流</strong></h4><ul><li><strong>定义：</strong>当使用绝对值来设置框的大小，而大小不适合放置的内容，就会出现内容从盒子溢出。</li><li><strong>运用：</strong>使用overflow属性来控制这种情况的发生，属性值有<ul><li>auto：当内容过多，溢流的内容被隐藏，通过滚动条来查看所有内容。</li><li>hidden：当内容过多，溢流的内容被隐藏。</li><li>visible: 当内容过多，溢流的内容被显示在盒子的外边。（默认属性）</li></ul></li></ul></li><li><h4 id="背景裁剪（background-clip）"><a href="#背景裁剪（background-clip）" class="headerlink" title="背景裁剪（background-clip）"></a>背景裁剪（background-clip）</h4><ul><li><strong>定义：</strong>设置元素的背景（背景图片或颜色）是否延伸到边框下面。</li><li><strong>运用：</strong><ul><li><strong>border-box：</strong>背景延伸至边框外沿。</li><li><strong>padding-box：</strong>背景延伸至内边距（padding）外沿。</li><li><strong>content-box：</strong>背景被裁剪至内容区（content box）外沿。</li><li><strong>text：</strong>背景被裁剪成文字的前景色。</li></ul></li></ul></li><li><h4 id="轮廓（Outline）"><a href="#轮廓（Outline）" class="headerlink" title="轮廓（Outline）"></a>轮廓（Outline）</h4><ul><li><strong>定义：</strong>盒子的 outline 看起来像边框，但是它不是盒模型的一部分。它表现得像边框，但是是画在盒子之上，不会修改盒子的大小（具体来说，outline 是画在边框之外，外边距区域之内）。</li></ul></li><li><h4 id="框显示类型（display）"><a href="#框显示类型（display）" class="headerlink" title="框显示类型（display）"></a>框显示类型（display）</h4><ul><li><strong>block（块元素）：</strong>定义为堆放在其他框上的框，内容会独占一行。</li><li><strong>inline（行内元素）：</strong>与块框是相反的，它随着文档的文字流动。设置宽高无效，设置padding, margin 和 border都会更新周围文字的位置。</li><li><strong>inline-box（行内块元素）：</strong>上述两种的集合：它不会重新另起一行但会像行内元素（ inline）一样随着周围文字而流动，而且他能够设置宽高，并且像块框一样保持了其块特性的完整性，它不会在段落行中断开。</li></ul></li></ul><hr><p>以上为学习内容总结，如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：4小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第四天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;盒模型&quot;&gt;&lt;a href=&quot;#盒模型&quot; class=&quot;headerlink&quot; title=&quot;盒模型&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>上传代码到GitHub并预览</title>
    <link href="http://yoursite.com/2019/08/13/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%88%B0GitHub%E5%B9%B6%E9%A2%84%E8%A7%88/"/>
    <id>http://yoursite.com/2019/08/13/上传代码到GitHub并预览/</id>
    <published>2019-08-13T09:23:11.000Z</published>
    <updated>2019-08-14T02:42:16.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、建库"><a href="#一、建库" class="headerlink" title="一、建库"></a>一、建库</h2><h3 id="1-注册和登陆你的GitHub账号"><a href="#1-注册和登陆你的GitHub账号" class="headerlink" title="1.注册和登陆你的GitHub账号"></a>1.注册和登陆你的GitHub账号</h3><p><img src="/2019/08/13/上传代码到GitHub并预览/20190813165810.png" alt></p><h3 id="2-创建一个库，填写库名称。"><a href="#2-创建一个库，填写库名称。" class="headerlink" title="2.创建一个库，填写库名称。"></a>2.创建一个库，填写库名称。</h3><h3 id><a href="#" class="headerlink" title></a><img src="/2019/08/13/上传代码到GitHub并预览/20190813201717.png" alt="微信图片_20190813201717"></h3><h3 id="3-复制库的连接，之后上传代码会用到。"><a href="#3-复制库的连接，之后上传代码会用到。" class="headerlink" title="3.复制库的连接，之后上传代码会用到。"></a>3.复制库的连接，之后上传代码会用到。</h3><p><img src="/2019/08/13/上传代码到GitHub并预览/20190813202948.png" alt="微信图片_20190813202948"></p><h2 id="二-上传代码"><a href="#二-上传代码" class="headerlink" title="二.上传代码"></a>二.上传代码</h2><h3 id="1-安装Git，在网上百度搜索Git，安装最新版就行。没什么特殊步骤，一直按next就行。然后在安装目录或者在win键的最近添加找到Git-Bash"><a href="#1-安装Git，在网上百度搜索Git，安装最新版就行。没什么特殊步骤，一直按next就行。然后在安装目录或者在win键的最近添加找到Git-Bash" class="headerlink" title="1.安装Git，在网上百度搜索Git，安装最新版就行。没什么特殊步骤，一直按next就行。然后在安装目录或者在win键的最近添加找到Git Bash"></a>1.安装Git，在网上百度搜索Git，安装最新版就行。没什么特殊步骤，一直按next就行。然后在安装目录或者在win键的最近添加找到Git Bash</h3><p><img src="/2019/08/13/上传代码到GitHub并预览/20190813204039.png" alt></p><h3 id="2-打开Git-Bash，通过命令进入上传代码。"><a href="#2-打开Git-Bash，通过命令进入上传代码。" class="headerlink" title="2.打开Git Bash，通过命令进入上传代码。"></a>2.打开Git Bash，通过命令进入上传代码。</h3><ul><li>通过命令进入待上传的代码文件夹，命令格式：cd x(盘的字母):\xxx\xxx\xxx</li></ul><p><img src="/2019/08/13/上传代码到GitHub并预览/2019081322.png" alt="微信图片_2019081322"></p><ul><li>输入git init，在该文件夹生成本地git管理</li></ul><p><img src="/2019/08/13/上传代码到GitHub并预览/20191943.png" alt></p><ul><li>输入git add .   将文件夹所有文件上传到仓库，如果想添加某个文件，把“.”替换成文件名替换就行</li></ul><p><img src="/2019/08/13/上传代码到GitHub并预览/3.png" alt></p><ul><li>输入git commit -m “first commit”  给提交的文件注释，双引号里内容据需要修改注释</li></ul><p><img src="/2019/08/13/上传代码到GitHub并预览/4.png" alt></p><ul><li><p>如果出现这种情况，输入你的注册邮箱或名字。然后在输入一次git commit -m “first commit”</p><p><img src="/2019/08/13/上传代码到GitHub并预览/20180704091357264.png" alt></p></li><li><p>输入git remote add origin 自己的仓库url地址，将本地的仓库关联到github上</p></li><li><p>输入git push -u origin master 将代码上传到仓库。</p></li></ul><p><img src="/2019/08/13/上传代码到GitHub并预览/5.png" alt></p><h2 id="三、预览代码"><a href="#三、预览代码" class="headerlink" title="三、预览代码"></a>三、预览代码</h2><p>最近在学习前端，所以在GitHub提交自己的前端代码。在网页上显示在GitHub的前端代码效果，本人觉得最简单的方法：</p><h3 id="1-上传代码之后，点击库里的要显示的html文件。"><a href="#1-上传代码之后，点击库里的要显示的html文件。" class="headerlink" title="1.上传代码之后，点击库里的要显示的html文件。"></a>1.上传代码之后，点击库里的要显示的html文件。</h3><p><img src="/2019/08/13/上传代码到GitHub并预览/6.png" alt></p><h3 id="2-复制html文件页面的链接"><a href="#2-复制html文件页面的链接" class="headerlink" title="2.复制html文件页面的链接"></a>2.复制html文件页面的链接</h3><p><img src="/2019/08/13/上传代码到GitHub并预览/7.png" alt></p><h3 id="3-http-htmlpreview-github-io-加上你复制的链接"><a href="#3-http-htmlpreview-github-io-加上你复制的链接" class="headerlink" title="3.http://htmlpreview.github.io/?加上你复制的链接"></a>3.<a href="http://htmlpreview.github.io/?加上你复制的链接" target="_blank" rel="noopener">http://htmlpreview.github.io/?加上你复制的链接</a></h3><p><img src="/2019/08/13/上传代码到GitHub并预览/8.png" alt></p><hr><p>以上就是上传代码到GitHub并预览的全过程。如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、建库&quot;&gt;&lt;a href=&quot;#一、建库&quot; class=&quot;headerlink&quot; title=&quot;一、建库&quot;&gt;&lt;/a&gt;一、建库&lt;/h2&gt;&lt;h3 id=&quot;1-注册和登陆你的GitHub账号&quot;&gt;&lt;a href=&quot;#1-注册和登陆你的GitHub账号&quot; class=&quot;he
      
    
    </summary>
    
      <category term="前端学习" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="上传代码" scheme="http://yoursite.com/tags/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>上传图片到hexo博客</title>
    <link href="http://yoursite.com/2019/08/13/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/08/13/上传图片到hexo博客/</id>
    <published>2019-08-13T09:18:10.000Z</published>
    <updated>2019-08-14T03:18:25.204Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-修改博客根目录的-congig-yml文件中的post-asset-folder为true"><a href="#1-修改博客根目录的-congig-yml文件中的post-asset-folder为true" class="headerlink" title="1.修改博客根目录的_congig.yml文件中的post_asset_folder为true"></a>1.修改博客根目录的_congig.yml文件中的post_asset_folder为true</h3><p>设置完后，在hexo  new  “新文件”后，_post目录会出现同名的文件夹，在这个文件夹放入文章要用的资源。</p><p><img src="/2019/08/13/上传图片到hexo博客/1.png" alt></p><p><img src="/2019/08/13/上传图片到hexo博客/2.png" alt></p><h3 id="2-安装显示图片的插件，用管理员运行cmd，在博客根目录下运行-npm-install-hexo-asset-image-–save命令。"><a href="#2-安装显示图片的插件，用管理员运行cmd，在博客根目录下运行-npm-install-hexo-asset-image-–save命令。" class="headerlink" title="2.安装显示图片的插件，用管理员运行cmd，在博客根目录下运行 npm install hexo-asset-image –save命令。"></a>2.安装显示图片的插件，用管理员运行cmd，在博客根目录下运行 npm install hexo-asset-image –save命令。</h3><p>出现以下警告可以不用理会，+ hexo <a href="mailto:-asset-images@0.0.5" target="_blank" rel="noopener">-asset-images@0.0.5</a>说明已安装。</p><p><img src="/2019/08/13/上传图片到hexo博客/3.png" alt></p><h3 id="3-在-md文章引用图片，使用的是相对地址，"><a href="#3-在-md文章引用图片，使用的是相对地址，" class="headerlink" title="3.在.md文章引用图片，使用的是相对地址，"></a>3.在.md文章引用图片，使用的是相对地址，<img src="/2019/08/13/上传图片到hexo博客/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97.jpg" alt="使用图片"></h3><p><font color="red"><strong>注意：用的是/，还有是相对地址</strong></font></p><p><strong>大功告成，然后hexo clean 、hexo g、hexo s、hexo d四连查看效果。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-修改博客根目录的-congig-yml文件中的post-asset-folder为true&quot;&gt;&lt;a href=&quot;#1-修改博客根目录的-congig-yml文件中的post-asset-folder为true&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="上传图片" scheme="http://yoursite.com/tags/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>前端学习-Day3</title>
    <link href="http://yoursite.com/2019/08/09/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day3/"/>
    <id>http://yoursite.com/2019/08/09/前端学习-Day3/</id>
    <published>2019-08-09T07:24:18.000Z</published>
    <updated>2019-08-09T09:19:10.045Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：3.5小时</li><li>学习目标：零基础学院-第三天</li><li>目标是否达成：已达成</li></ul><hr><h3 id="CSS背景"><a href="#CSS背景" class="headerlink" title="CSS背景"></a>CSS背景</h3><ul><li><h4 id="color（背景颜色）"><a href="#color（背景颜色）" class="headerlink" title="color（背景颜色）"></a><strong>color（背景颜色）</strong></h4><p>首先大多数元素的默认背景色是透明（transparent）。所以注意如果要用到白色背景色，请设置白颜色。</p></li><li><h4 id="image（背景图片）"><a href="#image（背景图片）" class="headerlink" title="image（背景图片）"></a><strong>image（背景图片）</strong></h4><ul><li>该属性最简单的用法是使用url()函数——它以一个参数的路径作为参数——后去一个静态图像文件来插入。</li><li>线性渐变是通过linear-gradient()函数传入的。函数需要用逗号分隔的四个参数——背景中渐变的方向、开始的颜色、颜色站点和结尾的颜色。至少用到渐变方向、开始颜色和结尾颜色。<ul><li>渐变方向：使用关键词to bottom（从上到下）或者角度值（0deg相当于to top，90deg相当于to right)</li><li>颜色站点：指定位置渐变到什么颜色。可以用百分号、px、rem。</li></ul></li></ul></li><li><h4 id="position（背景位置）"><a href="#position（背景位置）" class="headerlink" title="position（背景位置）"></a><strong>position（背景位置）</strong></h4><ul><li>px——如background-position：200px 25px（向右移200px,向左移25px）</li><li>rem——比如background-position: 20rem 2.5rem（向右移20rem,向左移2.5rem）</li><li>百分比——比如background-position: 90% 25%<ul><li>等同于x：{容器(container)的宽度—背景图片的宽度}<em>x百分比，超出的部分隐藏。</em></li><li>等同于y：{容器(container)的高度—背景图片的高度}*y百分比，超出的部分隐藏。</li></ul></li><li>关键字——比如background-position: right center（水平靠右、垂直居中）</li></ul></li><li><h4 id="repeat（背景重复）"><a href="#repeat（背景重复）" class="headerlink" title="repeat（背景重复）"></a><strong>repeat（背景重复）</strong></h4><ul><li>no-repeat：图像不会重复，只会显示一次。</li><li>repeat-x：图像将在整个背景中水平地重复。</li><li>repeat-y：图像会在背景下垂直地重复。</li><li>repeat：图像将在整个背景中水平和垂直地重复。</li></ul></li><li><h4 id="attachment（背景附着）"><a href="#attachment（背景附着）" class="headerlink" title="attachment（背景附着）"></a><strong>attachment（背景附着）</strong></h4><ul><li>scroll : 会使元素的背景在页面滚动时滚动。如果元素内容滚动了，背景并不会滚动。实际上，背景固定在了页面上相同的位置，所以当页面滚动时它才滚动。</li><li>fixed : 会使元素的背景相对于视口固定。因此不管当页面还是元素内容滚动时，它都不会滚动，它会始终保持在屏幕上相同的位置。</li><li>local :这个值后来被添加了(它只在Internet Explorer 9+中得到支持，而其他的则在IE4+中得到支持)，因为scroll值相当混乱，并且在许多情况下并没有真正做您想要的事情。  local 值将背景设置为它所设置的元素的背景，因此当您滚动元素时，背景会随之滚动。</li></ul></li></ul><hr><h3 id="CSS边框"><a href="#CSS边框" class="headerlink" title="CSS边框"></a>CSS边框</h3><ul><li><h4 id="通用使用模式："><a href="#通用使用模式：" class="headerlink" title="通用使用模式："></a><strong>通用使用模式：</strong></h4><ul><li>border-属性：值1 值2 值3 值4；（上边、右边、下边、左边的值）</li><li>border-属性：值1 值2 值3 ；（上边、左右边、下边）</li><li>border-属性：值1 值2；（上下边、左右边的值）</li><li>border-属性：值1；（四边的值）<ul><li>border-属性-方向：值；（方向边的值）</li></ul></li></ul></li><li><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a><strong>属性</strong></h4><ul><li><strong>常用style（样式）</strong><ul><li>dotted：点状</li><li>solid：实线</li><li>double：双线</li><li>dashed：虚线</li><li>none：无边框</li><li>inherit：从父元素继承边框样式</li></ul></li><li><strong>width（宽度）</strong><ul><li>指定长度值：使用px或em</li><li>关键词<ul><li>thin（细边框）</li><li>medium（中等边框）</li><li>thick（粗边框）</li></ul></li></ul></li><li><strong>color（颜色）</strong></li></ul></li></ul><hr><h3 id="CSS列表"><a href="#CSS列表" class="headerlink" title="CSS列表"></a>CSS列表</h3><ul><li><h4 id="list-style：简写属性在一个声明中设置所有的列表属性。"><a href="#list-style：简写属性在一个声明中设置所有的列表属性。" class="headerlink" title="list-style：简写属性在一个声明中设置所有的列表属性。"></a><strong>list-style</strong>：简写属性在一个声明中设置所有的列表属性。</h4><ul><li><strong>list-style-type</strong>：列表标记的类型<ul><li>none：无标记。</li><li>disc：默认，实心圆。</li><li>circle：空心圆。</li><li>square：实心方块。</li><li>decimal：数字。</li><li>等等</li></ul></li><li><strong>list-style-position</strong>：列表标记放置方式<ul><li>inside：列表项目标记放置在文本以内，且环绕文本根据标记对齐。</li><li>outside：默认值。保持标记位于文本的左侧。列表项目标记放置在文本以外，且环绕文本不根据标记对齐。</li></ul></li><li><strong>list-style-image</strong>：使用图像替换列表项的标记。</li></ul></li></ul><hr><h3 id="CSS链接"><a href="#CSS链接" class="headerlink" title="CSS链接"></a>CSS链接</h3><h4 id="链接的四种状态："><a href="#链接的四种状态：" class="headerlink" title="链接的四种状态："></a>链接的四种状态：</h4><ul><li><p><strong>a:link</strong>：普通的、未被访问的链接</p></li><li><p><strong>a:visited</strong>：用户已访问的链接</p></li><li><p><strong>a:hover</strong>：鼠标指针位于链接的上方</p></li><li><p><strong>a:active</strong>：链接被点击的时刻</p></li></ul><p>通过对这四种状态进行样式改变，就可以有很多不同的效果。</p><hr><p>以上为学习内容总结，如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：3.5小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第三天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;CSS背景&quot;&gt;&lt;a href=&quot;#CSS背景&quot; class=&quot;headerlink&quot; title=&quot;CS
      
    
    </summary>
    
      <category term="前端学习" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端学习-Day2</title>
    <link href="http://yoursite.com/2019/08/08/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day2/"/>
    <id>http://yoursite.com/2019/08/08/前端学习-Day2/</id>
    <published>2019-08-08T06:39:44.000Z</published>
    <updated>2019-08-08T09:31:46.531Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：3.5小时</li><li>学习目标：零基础学院-第二天</li><li>目标是否达成：已达成</li></ul><hr><table><tr><td bgcolor="black"><font color="white" size="6">关于CSS</font></td></tr></table>CSS（Cascading Style Sheets）指层叠样式表，是一种用于用户指定文档如何呈现的声明语言。<h3 id="CSS组成"><a href="#CSS组成" class="headerlink" title="CSS组成"></a>CSS组成</h3><ul><li><p><strong>声明</strong>：多个声明块组成的组。</p><ul><li><p><strong>声明块</strong>：一个属性加属性值的语句。</p><ul><li><p><strong>属性</strong>：一些人类可理解的标识符，这些标识符指出你想修改的样式。</p></li><li><p><strong>属性值</strong>：给指定的属性定一个值，如果值超出属性的值域则判无效。    </p></li></ul></li></ul></li><li><p><strong>选择器</strong>：是一种模式，能在页面匹配一些元素，并将相关声明应用在被选择的声明。</p><ul><li><strong>简单选择器</strong><ul><li><strong>类型选择器</strong>：选择器名和html元素标签一样的。例如p标签、h2标签。</li><li><strong>类选择器</strong>：是由”.”以及类名组成。类名是HTML<font color="blue">class</font>文档元素中没有空格的任何值。</li><li><strong>ID选择器</strong>：由一个哈希/磅符号 (<code>#</code>)，后面跟着给定元素的ID名称组成的。</li><li><strong>通用选择器</strong>：通用选择（<code>*</code>）是最终的王牌。它允许选择在一个页面中的所有元素。</li></ul></li><li><strong>属性选择器</strong><ul><li><strong>存在和值属性选择器</strong>：<ul><li><strong>[attr]</strong>：该选择器选择包含 attr 属性的所有元素，不论 attr 的值为何。</li><li><strong>[attr=val]</strong>：该选择器仅选择 attr 属性被赋值为 val 的所有元素。</li><li><strong>[attr~=val]</strong>：该选择器仅选择具有 attr 属性的元素，而且要求 val 值是 attr 值包含</li></ul></li><li><strong>子串值属性选择器</strong>：<ul><li><strong>[attr|=val]</strong> : 选择attr属性的值是 val 或值以 val- 开头的元素（注意，这里的 “-” 不是一个错误，这是用来处理语言编码的）。</li><li><strong>[attr^=val]</strong> : 选择attr属性的值以 val 开头（包括 val）的元素。</li><li>[<strong>attr$=val]</strong> : 选择attr属性的值以 val 结尾（包括 val）的元素。</li><li><strong>[attr*=val]</strong> : 选择attr属性的值中包含子字符串 val 的元素（一个子字符串就是一个字符串的一部分而已，例如，”cat“ 是 字符串 ”caterpillar“ 的子字符串）。</li></ul></li></ul></li><li><strong>伪类和伪元素</strong></li><li><strong>组合器和多用选择器</strong></li></ul></li></ul><hr><table><tr><td bgcolor="black"><font color="white" size="5">字体样式</font></td></tr></table>字体样式: 作用于字体的属性，会直接应用到文本中，比如使用哪种字体，字体的大小是怎样的，字体是粗体还是斜体，等等。<ul><li><p><strong>font-size</strong>：设置字体大小</p><ul><li><code>px(像素)</code>: 将像素的值赋予给你的文本。这是一个绝对单位， 它导致了在任何情况下，页面上的文本所计算出来的像素值都是一样的。</li><li><code>em</code>：1em 等于我们设计的当前元素的父元素上设置的字体大小 (更加具体的话，比如包含在父元素中的大写字母 M 的宽度)</li></ul></li><li><p><strong>color</strong>：设置文本颜色</p></li><li><p><strong>font-family</strong>：设置字体样式</p></li><li><p><strong>font-style</strong>：用来打开和关闭文本 italic (斜体)。</p><ul><li><code>normal</code>: 将文本设置为普通字体 (将存在的斜体关闭)</li><li><code>italic</code>: 如果当前字体的斜体版本可用，那么文本设置为斜体版本；如果不可用，那么会利用 oblique 状态来模拟 italics。</li><li><code>oblique</code>: 将文本设置为斜体字体的模拟版本，也就是将普通文本倾斜的样式应用到文本中。</li></ul></li><li><p><strong>font-weight</strong>：设置文字的粗体大小。</p><ul><li><code>normal</code>, <code>bold</code>: 普通或者<strong>加粗</strong>的字体粗细</li><li><code>lighter</code>, <code>bolder</code>: 将当前元素的粗体设置为比其父元素粗体更细或更粗一步。<code>100</code>–<code>900</code>: 数值粗体值，如果需要，可提供比上述关键字更精细的粒度控制。</li></ul></li></ul><hr><table><tr><td bgcolor="black"><font color="white" size="5">文本修饰</font></td></tr></table><ul><li><strong>text-transform</strong>：允许你设置要转换的字体<ul><li><code>none</code>: 防止任何转型。</li><li><code>uppercase</code>: 将所有文本转为大写。</li><li><code>lowercase</code>: 将所有文本转为小写。</li><li><code>capitalize</code>: 转换所有单词让其首字母大写。</li><li><code>full-width</code>: 将所有字形转换成全角，即固定宽度的正方形，类似于等宽字体，允许拉丁字符和亚洲语言字形（如中文，日文，韩文）对齐。</li></ul></li><li><strong>text-decoration</strong>：设置/取消字体上的文本装饰<ul><li><code>none</code>: 取消已经存在的任何文本装饰。</li><li><code>underline</code>: 文本下划线.</li><li><code>overline</code>: <u>文本上划线</u></li><li><code>line-through</code>: 穿过文本的线 <del>strikethrough over the text</del>.</li></ul></li><li><strong>text-shadow</strong>：你的文本应用阴影。</li><li><strong>text-align</strong>：用来控制文本如何和它所在的内容盒子对齐</li><li><strong>line-height</strong>：属性设置文本每行之间的高。</li></ul><hr><p>以上是我今天学习总结的内容，如有错漏，多多指点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：3.5小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第二天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;black&quot;&gt;&lt;font color=&quot;white&quot; size=&quot;6&quot;&gt;
      
    
    </summary>
    
      <category term="前端学习" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端学习-Day1</title>
    <link href="http://yoursite.com/2019/08/07/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0-Day1/"/>
    <id>http://yoursite.com/2019/08/07/前端学习-Day1/</id>
    <published>2019-08-07T08:32:41.000Z</published>
    <updated>2019-08-13T09:47:10.294Z</updated>
    
    <content type="html"><![CDATA[<ul><li>学习用时：4小时</li><li>学习目标：零基础学院-第二天</li><li>目标是否达成：已达成</li></ul><hr><h3 id="1-HTML是什么，HTML5是什么？"><a href="#1-HTML是什么，HTML5是什么？" class="headerlink" title="1.HTML是什么，HTML5是什么？"></a>1.HTML是什么，HTML5是什么？</h3><ul><li><p>HTML指的是超文本标记语言（Hyper Text Marlup Language）。</p></li><li><p>HTML不是编程语言，而是一种标记语言（markup language）。</p></li><li><p>HTML5是最新的HTML标准，拥有新的语义、图形以及多媒体元素。</p><h3 id="2-HTML元素标签、属性都是什么概念？"><a href="#2-HTML元素标签、属性都是什么概念？" class="headerlink" title="2.HTML元素标签、属性都是什么概念？"></a>2.HTML元素标签、属性都是什么概念？</h3></li><li><p>HTML元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><ul><li>例子：&lt;开始标签&gt;元素&lt;/结束标签&gt;</li></ul></li><li><p>属性为HTML元素提供附加信息。</p><ul><li>例子：链接的地址在href属性中指定：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://engrams.github.io/"</span>&gt;</span>我的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-文档类型是什么概念，起什么作用？"><a href="#3-文档类型是什么概念，起什么作用？" class="headerlink" title="3.文档类型是什么概念，起什么作用？"></a>3.文档类型是什么概念，起什么作用？</h3><ul><li><p>&lt; !DOCTYPE&gt; 为浏览器提供一项信息（声明），即HTML用什么版本写的。</p><h3 id="4-meta标签都用来做什么的？"><a href="#4-meta标签都用来做什么的？" class="headerlink" title="4.meta标签都用来做什么的？"></a>4.meta标签都用来做什么的？</h3></li><li><p>&lt; meta&gt;定义关于HTML文档的元数据。</p><ul><li><p>使用mate属性来标识创作者和编辑软件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=gb2312"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>本文档的 meta 属性描述了该文档和它的关键词。</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"HTML examples"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"HTML, DHTML, CSS, XML, XHTML, JavaScript, VBScript"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="5-Web语义化是什么，是为了解决什么问题"><a href="#5-Web语义化是什么，是为了解决什么问题" class="headerlink" title="5.Web语义化是什么，是为了解决什么问题"></a>5.Web语义化是什么，是为了解决什么问题</h3><ul><li>Web语义化是指使用恰当语义的html标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解页面内容。</li></ul><h4 id="6-链接是什么概念，对应什么标签？"><a href="#6-链接是什么概念，对应什么标签？" class="headerlink" title="6.链接是什么概念，对应什么标签？"></a>6.链接是什么概念，对应什么标签？</h4><ul><li>链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。 对应&lt; a&gt; 标签</li></ul><h3 id="7-常用标签都有哪些，都适合用在什么场景"><a href="#7-常用标签都有哪些，都适合用在什么场景" class="headerlink" title="7.常用标签都有哪些，都适合用在什么场景"></a>7.常用标签都有哪些，都适合用在什么场景</h3><table><thead><tr><th align="center">标签内容</th><th align="center">常用标签</th><th align="center">常用场景</th></tr></thead><tbody><tr><td align="center">HTML标题</td><td align="center">&lt; h1&gt; - &lt; h6&gt;</td><td align="center">定义标题</td></tr><tr><td align="center">HTML段落</td><td align="center">&lt; p&gt;</td><td align="center">定义段落</td></tr><tr><td align="center">HTML链接</td><td align="center">&lt; a&gt;</td><td align="center">定义连接</td></tr><tr><td align="center">HTML图像</td><td align="center">&lt; img&gt;</td><td align="center">定义图像</td></tr></tbody></table><h3 id="8-表单标签都有哪些，对应着什么功能，都有哪些属性"><a href="#8-表单标签都有哪些，对应着什么功能，都有哪些属性" class="headerlink" title="8.表单标签都有哪些，对应着什么功能，都有哪些属性"></a>8.表单标签都有哪些，对应着什么功能，都有哪些属性</h3><table><thead><tr><th align="center">表单标签</th><th align="center">功能</th><th align="center">属性</th></tr></thead><tbody><tr><td align="center">&lt; form&gt;</td><td align="center">定义HTML表单</td><td align="center">action、method、name</td></tr><tr><td align="center">&lt; input&gt;</td><td align="center">定义输入形式</td><td align="center">type、name</td></tr><tr><td align="center">&lt; textarea&gt;</td><td align="center">定义多行输入字段</td><td align="center">rows、cols、name</td></tr><tr><td align="center">&lt; select&gt;</td><td align="center">定义下拉列表</td><td align="center">name</td></tr><tr><td align="center">&lt; button&gt;</td><td align="center">定义可点击按钮</td><td align="center">type、name</td></tr></tbody></table><h3 id="9-ol-ul-li-dl-dd-dt等这些标签都适合用在什么地方，举个例子"><a href="#9-ol-ul-li-dl-dd-dt等这些标签都适合用在什么地方，举个例子" class="headerlink" title="9.ol, ul, li, dl, dd, dt等这些标签都适合用在什么地方，举个例子"></a>9.ol, ul, li, dl, dd, dt等这些标签都适合用在什么地方，举个例子</h3><ul><li><p>ol, ul, li：适用于多层次结构的内容。</p><ul><li><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>水果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>蔬菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>西兰花<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>白菜<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>dl, dd, dt：适用于项目及其注释的内容。</p><ul><li><p>例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>黑色热饮<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>白色冷饮<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;学习用时：4小时&lt;/li&gt;
&lt;li&gt;学习目标：零基础学院-第二天&lt;/li&gt;
&lt;li&gt;目标是否达成：已达成&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1-HTML是什么，HTML5是什么？&quot;&gt;&lt;a href=&quot;#1-HTML是什么，HTML5是什么？&quot; cl
      
    
    </summary>
    
      <category term="前端学习" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端学习" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>闲聊百科-青菜变黄</title>
    <link href="http://yoursite.com/2019/08/07/%E9%97%B2%E8%81%8A%E7%99%BE%E7%A7%91-%E9%9D%92%E8%8F%9C%E5%8F%98%E9%BB%84/"/>
    <id>http://yoursite.com/2019/08/07/闲聊百科-青菜变黄/</id>
    <published>2019-08-07T04:38:12.000Z</published>
    <updated>2019-08-07T05:27:54.357Z</updated>
    
    <content type="html"><![CDATA[<h2 id="青菜变黄的原因"><a href="#青菜变黄的原因" class="headerlink" title="青菜变黄的原因"></a>青菜变黄的原因</h2><p>最近对在冰箱放久的变黄青菜很好奇，就百度了一下。<br>找到了相关的内容：</p><ul><li><p><font face="微软雅黑" color="green" size="4">青菜绿色的原因：</font></p><p>青菜有中有两种青菜中有两种自然色素，一种是叶绿素，另一种是花青素。新鲜蔬菜叶绿素比较有活性，就掩盖了花青素的颜色，所以蔬菜呈现绿色。</p></li><li><p><font face="微软雅黑" color="GoldenRod" size="4">青菜放久变黄的原因：</font></p><p>当蔬菜放久了以后，叶绿素被破坏后,就显露出花青素的颜色，因为花青素一般是黄色的,所以放久了的青菜一般就会变黄。</p></li></ul><hr><p>相关资料：</p><p>1、叶绿素是植物进行光合作用的主要色素，是一类含脂的色素家族，位于类囊体膜。叶绿素吸收大部分的红光和紫光但反射绿光，所以叶绿素呈现绿色，它在光合作用的光吸收中起核心作用。叶绿素为镁卟啉化合物，包括叶绿素a、b、c、d、f以及原叶绿素和细菌叶绿素等。叶绿素不很稳定，光、酸、碱、氧、氧化剂等都会使其分解。酸性条件下，叶绿素分子很容易失去卟啉环中的镁成为去镁叶绿素。叶绿素有造血提供维生素、解毒、抗病等多种用途。</p><p>2、花青素，又称花色素，是自然界一类广泛存在于植物中的水溶性天然色素，是花色苷水解而得的有颜色的苷元 。水果、蔬菜、花卉中的主要呈色物质大部分与之有关。在植物细胞液泡不同的PH 值条件下，花青素使花瓣呈现五彩缤纷的颜色。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;青菜变黄的原因&quot;&gt;&lt;a href=&quot;#青菜变黄的原因&quot; class=&quot;headerlink&quot; title=&quot;青菜变黄的原因&quot;&gt;&lt;/a&gt;青菜变黄的原因&lt;/h2&gt;&lt;p&gt;最近对在冰箱放久的变黄青菜很好奇，就百度了一下。&lt;br&gt;找到了相关的内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li
      
    
    </summary>
    
      <category term="闲聊百科" scheme="http://yoursite.com/categories/%E9%97%B2%E8%81%8A%E7%99%BE%E7%A7%91/"/>
    
    
      <category term="闲聊百科" scheme="http://yoursite.com/tags/%E9%97%B2%E8%81%8A%E7%99%BE%E7%A7%91/"/>
    
      <category term="青菜" scheme="http://yoursite.com/tags/%E9%9D%92%E8%8F%9C/"/>
    
  </entry>
  
</feed>
